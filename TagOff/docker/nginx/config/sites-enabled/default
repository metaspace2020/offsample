log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
proxy_cache_path /tmp/nginx levels=1:2 keys_zone=my_zone:2000m inactive=168h;
proxy_buffering off;

server {
    #server_name localhost;
    listen 8999;
    proxy_read_timeout 300;
    send_timeout 300;
    resolver 127.0.0.11 valid=30s;
    location /mol-images/ {
        root /var/www;
    }
    location / {
        # Using variables for proxy_pass instead of upstream server definitions means that nginx
        # won't die if the DNS entry doesn't exist, e.g. because docker hasn't started the container yet
        set $web_server sm-webapp:8082;
        proxy_pass http://$web_server;
        client_max_body_size 5M;
    }

    location /fs/iso_images/ {
        proxy_pass http://sm-graphql:4201/fs/iso_images/;
        limit_except GET {deny all;}
    }
    location /db/iso_images/ {
        proxy_pass http://sm-graphql:4201/db/iso_images/;
        limit_except GET {deny all;}
    }
    location /fs/optical_images/ {
        proxy_pass http://sm-graphql:4201/fs/optical_images/;
        limit_except GET {deny all;}
    }
    location /fs/raw_optical_images/ {
        proxy_pass http://sm-graphql:4201/fs/raw_optical_images/;
        client_max_body_size 25M;
    }
    location /graphql {
        proxy_pass http://sm-graphql:3010/graphql;
        include proxy-params.conf;
    }
    location /graphiql {
        proxy_pass http://sm-graphql:3010/graphiql;
        include proxy-params.conf;
    }
    location /ws {
        set $graphql_ws_server sm-graphql:5666;
        proxy_pass http://$graphql_ws_server/graphql;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        include proxy-params.conf;
    }
    location /mol_db/ {
        proxy_pass http://sm-mol-db:5001/;
        include proxy-params.conf;
    }
    location /app/kibana {
        set $kibana_server kibana:5601;
        proxy_pass http://$kibana_server/;
        include proxy-params.conf;
    }
}

server {
    listen 9210;
    location / {
        auth_basic "Private Property";
        auth_basic_user_file /etc/nginx/passwdfile;
        set $elasticsearch_server elasticsearch:9200;
        proxy_pass http://$elasticsearch_server;
        include proxy-params.conf;
    }
}

